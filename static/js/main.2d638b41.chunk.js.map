{"version":3,"sources":["components/Header.jsx","solver.js","components/Button.jsx","components/Input.jsx","components/Outputgrid.jsx","components/Grid.jsx","components/Footer.jsx","App.js","index.js"],"names":["Header","className","is_valid","grid","row","col","num","i","j","k","l","is_valid_helper_3_3","Math","floor","solve","initialValidation_helper_3_3","ch","Array","solver","preparedGrid","count","t","value","Number","initialValidation","console","log","Button","props","type","text","Input","max","min","placeholder","Outputgrid","length","style","color","textAlign","onClick","gobackfunction","Preparedgrid","key","T","push","Grid","React","useState","Outputgridp","SetOutputgridp","Preparedinputs","id","f","Getpreparedinputs","autoComplete","onSubmit","e","preventDefault","ouputarray","target","elements","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d638b41.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Sudoku Solver</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","\r\nconst N = 9;\r\nfunction is_valid_helper_3_3(grid, i, j, num) {\r\n    //set<int> temp;\r\n    //fill(ch.begin(), ch.end(), 0);\r\n    for (let k = i; k < i + 3; k++) {\r\n        for (let l = j; l < j + 3; l++) {\r\n            if (grid[k][l] === num) {\r\n\r\n                // cout<<grid[i][j]<<endl;;\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //if(temp==s) return true;\r\n    return true;\r\n\r\n}\r\n\r\nfunction is_valid(grid, row, col, num) {\r\n    // print(grid);\r\n    // cout<<endl;\r\n    //fill(ch.begin(), ch.end(), 0);\r\n    for (let i = 0; i < N; i++) {\r\n        if (grid[i][col] === num) return false;\r\n        //ch[grid[i][col]] = true;\r\n\r\n    }\r\n\r\n    //fill(ch.begin(), ch.end(), 0);\r\n    for (let i = 0; i < N; i++) {\r\n        if (grid[row][i] === num) return false;\r\n        //ch[grid[row][i]] = true;\r\n\r\n    }\r\n\r\n    row = (Math.floor(row / 3)) * 3;\r\n    col = (Math.floor(col / 3)) * 3;\r\n    if (!is_valid_helper_3_3(grid, row, col, num)) return false;\r\n\r\n    return true;\r\n\r\n\r\n\r\n}\r\n\r\n\r\nfunction solve(grid, i, j) {\r\n    //cout<<\"Step \"<<step++<<endl;\r\n    if (j === 9 && i === 8) {\r\n        //  print(grid);\r\n        //  cout<<endl;\r\n        //if(is_valid(grid)) return true;\r\n        return true;\r\n    }\r\n\r\n    if (j === 9) {\r\n        j = 0;\r\n        i++;\r\n    }\r\n\r\n    if (grid[i][j] !== 0) {\r\n        return solve(grid, i, j + 1);\r\n    }\r\n\r\n    for (let k = 1; k <= N; k++) {\r\n        if (!is_valid(grid, i, j, k)) continue;\r\n        grid[i][j] = k;\r\n        //cout<<is_valid(grid)<<endl;\r\n\r\n\r\n        if (solve(grid, i, j + 1)) return true;\r\n\r\n    }\r\n\r\n    grid[i][j] = 0;\r\n\r\n    return false;\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nfunction initialValidation_helper_3_3(grid, i, j) {\r\n    var ch = new Array(10);\r\n    for (let k = i; k < i + 3; k++) {\r\n        for (let l = j; l < j + 3; l++) {\r\n            if (ch[grid[k][l]] && grid[k][l] !== 0) {\r\n\r\n                // cout<<grid[i][j]<<endl;;\r\n\r\n                return false;\r\n\r\n            }\r\n            ch[grid[k][l]] = true;\r\n        }\r\n    }\r\n\r\n    //if(temp==s) return true;\r\n    return true;\r\n\r\n}\r\n\r\n\r\nfunction initialValidation(grid) {\r\n    var ch = new Array(10);\r\n    //for (let i = 0; i < 9; i++) ch[i] = false;\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n        for (let i = 0; i < 10; i++) ch[i] = false;\r\n        for (let j = 0; j < 9; j++) {\r\n            if (ch[grid[i][j]] && grid[i][j] !== 0) return false;\r\n            ch[grid[i][j]] = true;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //for (let i = 0; i < 9; i++) ch[i] = false;\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n\r\n        for (let i = 0; i < 10; i++) ch[i] = false;\r\n\r\n        for (let j = 0; j < 9; j++) {\r\n            if (ch[grid[j][i]] && grid[j][i] !== 0) return false;\r\n            ch[grid[j][i]] = true;\r\n        }\r\n\r\n    }\r\n\r\n    if (!initialValidation_helper_3_3(grid, 0, 0)) return false;\r\n    if (!initialValidation_helper_3_3(grid, 0, 3)) return false;\r\n    if (!initialValidation_helper_3_3(grid, 0, 6)) return false;\r\n    if (!initialValidation_helper_3_3(grid, 3, 0)) return false;\r\n    if (!initialValidation_helper_3_3(grid, 3, 3)) return false;\r\n    if (!initialValidation_helper_3_3(grid, 3, 6)) return false;\r\n    if (!initialValidation_helper_3_3(grid, 6, 0)) return false;\r\n    if (!initialValidation_helper_3_3(grid, 6, 3)) return false;\r\n    if (!initialValidation_helper_3_3(grid, 6, 6)) return false;\r\n\r\n\r\n\r\n\r\n\r\n    return true;\r\n\r\n}\r\n\r\n\r\n\r\nfunction solver(grid) {\r\n\r\n    //    let grid =[ [ 3, 0, 6, 5, 0, 8, 4, 0, 0 ],\r\n    //    [ 5, 2, 0, 0, 0, 0, 0, 0, 0 ],\r\n    //    [ 0, 8, 7, 0, 0, 0, 0, 3, 1 ],\r\n    //    [ 0, 0, 3, 0, 1, 0, 0, 8, 0 ],\r\n    //    [ 9, 0, 0, 8, 6, 3, 0, 0, 5 ],\r\n    //    [ 0, 5, 0, 0, 9, 0, 6, 0, 0 ],\r\n    //    [ 1, 3, 0, 0, 0, 0, 2, 5, 0 ],\r\n    //    [ 0, 0, 0, 0, 0, 0, 0, 7, 4 ],\r\n    //    [ 0, 0, 5, 2, 0, 6, 3, 0, 0 ] ];\r\n    var preparedGrid = new Array(9);\r\n    for (let i = 0; i < 9; i++) {\r\n        preparedGrid[i] = new Array(9)\r\n    }\r\n\r\n    var count = 0;\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n        for (let j = 0; j < 9; j++) {\r\n            let t = grid[count].value;\r\n            count++;\r\n            if (t) {\r\n                preparedGrid[i][j] = Number(t);\r\n\r\n            }\r\n            else {\r\n                preparedGrid[i][j] = Number(0);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // let copy = JSON.parse(JSON.stringify(preparedGrid));\r\n    // console.log(copy);\r\n\r\n\r\n    if (!initialValidation(preparedGrid)) {\r\n\r\n        let emptyArr = [];\r\n        return emptyArr;\r\n\r\n\r\n    }\r\n\r\n    if (solve(preparedGrid, 0, 0)) {\r\n        //console.log(preparedGrid);\r\n        return preparedGrid;\r\n    }\r\n    else {\r\n        console.log(\"No solution exists\");\r\n        let emptyArr = [];\r\n        return emptyArr;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default solver\r\n//main();\r\n","import React from \"react\";\r\nimport \"./button.css\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button type=\"submit\" className=\"btn\">\r\n      {props.text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./input.css\";\r\nfunction Input(props) {\r\n  return (\r\n    <input\r\n      className=\"inp\"\r\n      type=\"number\"\r\n      max=\"9\"\r\n      min=\"1\"\r\n      // autocomplete=\"false\"\r\n      //onChange={handleChange}\r\n      //value={note.title}\r\n      placeholder=\"0\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./outputgrid.css\";\r\n\r\nfunction Outputgrid(props) {\r\n  var grid = props.grid;\r\n  //console.log(grid);\r\n  if (grid.length === 0) {\r\n    return (\r\n      <div className=\"outputgrid col\">\r\n        <h2 style={{ color: \"#FF6767\" }}>Opps! No Solution Exists</h2>\r\n        <span\r\n          style={{ textAlign: \"center\" }}\r\n          onClick={() => {\r\n            props.gobackfunction(null);\r\n          }}\r\n        >\r\n          <Button text={\"Go Back\"} />\r\n        </span>\r\n      </div>\r\n    );\r\n  } else {\r\n    var Preparedgrid = [];\r\n    let key = 0;\r\n    for (let i = 0; i < 9; i++) {\r\n      var T = [];\r\n      for (let j = 0; j < 9; j++) {\r\n        T.push(\r\n          <span key={key++} className=\"outputgriditem\">\r\n            {grid[i][j]}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      Preparedgrid.push(\r\n        <div key={key++} className=\"row\">\r\n          {T}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"col outputgrid\">\r\n        <h2 className=\"outputgridheading\">Solution</h2>\r\n        {Preparedgrid}\r\n        <span\r\n          style={{ textAlign: \"center\" }}\r\n          onClick={() => {\r\n            props.gobackfunction(null);\r\n          }}\r\n        >\r\n          <Button text={\"Go Back\"} />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Outputgrid;\r\n","import React from \"react\";\r\nimport solver from \"../solver\";\r\nimport Button from \"./Button\";\r\nimport \"./grid.css\";\r\nimport Input from \"./Input\";\r\nimport Outputgrid from \"./Outputgrid\";\r\n\r\nfunction Getpreparedinputs() {\r\n  var id = 0;\r\n  var f = [];\r\n  for (let i = 0; i < 9; i++) {\r\n    let row = [];\r\n    for (let j = 0; j < 9; j++) {\r\n      row.push(<Input key={id++} />);\r\n    }\r\n    f.push(\r\n      <div key={id++} className=\"row\">\r\n        {row}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return f;\r\n}\r\n\r\nfunction Grid() {\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // const { username, password } = e.target.elements;\r\n    var ouputarray = solver(e.target.elements);\r\n\r\n    SetOutputgridp(\r\n      <Outputgrid grid={ouputarray} gobackfunction={SetOutputgridp} />\r\n    );\r\n  }\r\n\r\n  const [Outputgridp, SetOutputgridp] = React.useState(null);\r\n  var Preparedinputs = Getpreparedinputs();\r\n\r\n  if (Outputgridp != null) return Outputgridp;\r\n  else\r\n    return (\r\n      <form className=\"input-grid\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <div className=\"col\">{Preparedinputs}</div>\r\n        <div className=\"row\">\r\n          <Button text={\"Solve\"} />\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <p>© 2021 Sagnik Jana</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport Grid from './components/Grid';\nimport Footer from './components/Footer';\n// import Button from './components/Button';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Grid />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}